version: '3.8'

services:
  rsvp-db:
    image: 'postgres' # use latest official postgres version
    env_file: .env
    volumes:
      - rsvp-db:/var/lib/postgresql/data/ # persist data even if container shuts down
    networks:
      - rsvp-network
    ports:
      - 5432:5432

  # Builds db and runs database migrations, then exits
  rsvp-db-migration:
    build:
      context: ./
      dockerfile: ./rsvp-db/Dockerfile
    command: /bin/sh -c "/app/wait-for.sh rsvp-db:5432 -- npm run migrate:latest"
    env_file: .env
    networks:
      - rsvp-network
    depends_on:
      - rsvp-db

  rsvp-tg:
    build:
      context: ./
      dockerfile: ./rsvp-tg/Dockerfile
    container_name: rsvp-tg
    restart: unless-stopped
    env_file: .env
    networks:
      - rsvp-network
    entrypoint: /app/wait-and-run.sh rsvp-db-migration
    command: node ./rsvp-tg/dist/index.js
    depends_on:
      - rsvp-db

  rsvp-api:
    build:
      context: ./
      dockerfile: ./rsvp-api/Dockerfile
    container_name: rsvp-api
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - rsvp-network
    entrypoint: /app/wait-and-run.sh rsvp-db-migration
    command: node ./rsvp-api/dist/src/index.js
    depends_on:
      - rsvp-db

  # Builds react front and launches nginx
  webservice:
    build:
      context: ./
      dockerfile: ./nginx/Dockerfile
    ports:
      - '80:80'
    networks:
      - rsvp-network

volumes:
  rsvp-db:
networks:
  rsvp-network:
    driver: bridge
